	The initial motivation for this project is for protecting our eyes. In modern society, people are frequently using all type of techniques. As computer programmers, laptops are our favorite. However, while we are focusing on our codings and then starring at our screens, our eyes are getting damage (you can feel your eyes are getting dry). So I made a project to catch the blinkings of both of your eyes. If you starring at the screen for too long, the project will notify you.

	To be honest, this process is not too bad. It's just annoying because I need to look up a lot of resources and then install a lot of libraries (None of my projects so far asks me to install that many libraries).

	Then after I finished the project for a single person, I was so struggling to make this project work for two people (or more). What if the users are watching movies or playing games on the single laptop and being too concentrated? Right?

	First, I was thinking to use an array of people where people have an element called Time. The Time for a person can record the last time this person blinked. When the person is out of the screen, the Time would become zero again. When the person comes back again, the Time would be reset. Unfortunately,  I found out I can only use it for the case people who are always in front of the screen and people who are only coming in or getting out from the left of the screen. If people are coming from the right side of the screen, the order of array would be massed up and the counter for the blinkings of each person would not work. I also cannot do anything for the people who are switching places. At that point, I was thinking about giving each different faces a distinct ID, so I can recognize which face is which.

	It is kind of out range of my imagination of the hardness of the project. But since I still have time, I decided to try it out. I heard the ratio of the distance of two eyes and the length of the nose of unique and unchanged for each person. So I was calculating this ratio, but it turns out that the ratio is changeable under this 68-facial-landmarks detector and varies quite large (varies +-0.1, while the ratio is around 1.0 something). So the first try is not working.

	Then I found some library called face_recognition online and decide to try that one. The tutorials are saying using face_recognition.face_encodings() is a good idea. However, this function requires an image with a single face as a sample before doing any detections. However, I cannot predict who is going to use this project and getting their picture as a sample image. I have to take a picture at the very beginning and cut this image around each face so that I created several images with only one single face and then the function can detect the face.

	I was thinking: "It should work now." However, since I need to recognize too many faces, the process became quite slow. What is more, since this library is kind of sensitive, for most of the time, my face cannot be recognized properly if I move my head in a fast speed. Anyway, it is pretty cool to try out. If I need this program works as what I expected, I need to spend more time learning machine learning and optimize the part of recognizing faces.

	In the end, I have to come back to my initial idea of using arrays. In real life, who will come in and get out from a screen, all even switch places all the time while watching movies or playing games? Well, you are right, some mean computer geniuses do that. But what if the users are coming in and out from the right side of the screen at the beginning and end of movie/games? It's ok, actually, it would only influence two blinkings. This project is already able to help you to protect your eyes.
	
	2019/5/28 I will try to conquer this problem by tracing each person on the screen. WILL UPDATE LATER!
